{"version":3,"sources":["containers/Home/SearchMoviesField/SearchMoviesField.js","components/UI/NavBar.js","components/UI/TransitionModal.js","components/MovieCard.js","components/Filters.js","containers/Home/MovieList/MoveList.js","containers/Home/SelectedMovie/SelectedMovie.js","hoc/withErrorHandler.js","hooks/http-error-handler.js","components/PosterModalCard.js","containers/Home/Home.js"],"names":["useStyles","makeStyles","theme","search","position","borderRadius","shape","width","order","breakpoints","down","margin","searchIcon","padding","spacing","height","right","pointerEvents","display","alignItems","justifyContent","color","palette","common","white","autoComplete","zIndex","inputRoot","inputInput","paddingLeft","transition","transitions","create","up","connect","dispatch","onUpdateMovieModal","movieId","actions","onSetSelectedMovie","movie","props","useState","open","setOpen","options","setOptions","input","setInput","classes","loading","length","useEffect","active","a","fetch","response","json","movies","results","map","key","alert","handleSubmit","e","value","preventDefault","id","handleChange","target","className","onSubmit","Autocomplete","onOpen","onClose","popupIcon","autoHighlight","onChange","getOptionSelected","option","name","getOptionLabel","title","renderInput","params","TextField","label","variant","InputProps","endAdornment","Fragment","CircularProgress","size","root","flexGrow","backgroundColor","appBar","background","boxShadow","flexDirection","Toolbar","opacity","flexWrap","signOut","logo","marginTop","state","selectedMovie","onLogout","useTheme","matches","useMediaQuery","between","Fade","in","timeout","enter","exit","AppBar","src","alt","to","Button","fontSize","undefined","SearchMoviesField","modal","primary","main","outline","TransitionsModal","Modal","aria-labelledby","aria-describedby","close","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","children","maxWidth","media","yourRatings","secondary","cardActions","marginLeft","MediaCard","borderStyle","style","border","watched","light","Card","CardActionArea","onClick","select","CardMedia","image","poster","CardActions","Rating","rating","precision","readOnly","max","remove","filter","gridContainer","formControl","minWidth","Filters","filterSelect","filterTitle","handleTitleChange","FormControl","InputLabel","Select","labelId","filterGenre","handleGenreChange","genre","MenuItem","filterWatched","handleWatchedChange","handleSelectChange","token","auth","userId","onRemoveFromMovieList","onSetMovieList","movieList","setFilterTitle","setFilterGenre","setFilterWatched","removeMovie","filteredMovies","toLowerCase","includes","genres","some","Grow","Grid","item","overview","poster_path","Box","component","handleSelect","container","direction","justify","overflow","paper","black","img","infoContainer","ratingsContainer","audienceStars","startContainer","ratingText","textAlign","movieChanged","onUpdateStarRating","onUpdateWatched","fade","setFade","setMovie","handleRating","duplicateSelectedMovie","setMovieWatched","Typography","gutterBottom","setTimeout","backgroundImageUrl","backdrop_path","tagline","ratingContainer","vote_average","disabled","withErrorHandler","WrappedComponent","axios","httpClient","error","setError","reqInterceptor","interceptors","request","use","req","resInterceptor","res","err","eject","useHttpErrorHandler","clearError","message","details","content","flex","cover","bottomContainer","button","PosterModalCard","posterText","moviePoster","checkMovieAdded","genresList","CardContent","runTime","voteAverage","addMovie","positon","gradient","top","searchedMovie","onModalToggle","onAddToMovieList","setLoading","selectInput","setSelectInput","handleAdd","queryParams","get","arrayResponse","Object","entries","data","homepage","NavBar","TransitionModal","runtime"],"mappings":"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","file":"static/js/4.57c05318.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport fetch from 'cross-fetch';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions/index';\n\nconst useStyles = makeStyles((theme) => ({\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    width: '20rem',\n    order: 2,\n    [theme.breakpoints.down('xs')]: {\n      order: 3,\n      width: '20rem',\n      margin: 'auto',\n    },\n    zIndex: 100,\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    right: 20,\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    color: theme.palette.common.white,\n    [theme.breakpoints.down('xs')]: {\n      right: 20,\n    },\n  },\n  autoComplete: {\n    zIndex: 10,\n    width: '20rem',\n    [theme.breakpoints.down('xs')]: {\n      margin: 'auto',\n    },\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\n\nconst SearchMoviesBar = (props) => {\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [input, setInput] = useState();\n  const classes = useStyles();\n  const { onUpdateMovieModal } = props;\n  const loading = open && options.length === 0;\n\n  useEffect(() => {\n    let active = true;\n    if (!input) {\n      return undefined;\n    }\n\n    (async () => {\n      try {\n        const response = await fetch(\n          `https://cors-anywhere.herokuapp.com/http://api.themoviedb.org/3/search/movie?api_key=105094d957931ab7b01705c2f3d2dd58&query=${input}`\n        );\n        const movies = await response.json();\n        movies.results.length = 2;\n        if (active) {\n          setOptions(movies.results.map((key) => key));\n        }\n      } catch (err) {\n        alert(err);\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading, input]);\n\n  useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  const handleSubmit = (e, value) => {\n    e.preventDefault();\n    if (value) {\n      onUpdateMovieModal(value.id);\n    }\n  };\n\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  return (\n    <div className={classes.search}>\n      <div className={classes.searchIcon}>\n        <SearchIcon />\n      </div>\n      <form onSubmit={handleSubmit}>\n        <Autocomplete\n          className={classes.autoComplete}\n          id=\"search movies\"\n          open={open}\n          onOpen={() => {\n            setOpen(true);\n          }}\n          onClose={() => {\n            setOpen(false);\n          }}\n          popupIcon={false}\n          autoHighlight={true}\n          onChange={handleSubmit}\n          getOptionSelected={(option, value) => {\n            return option.name === value.name;\n          }}\n          getOptionLabel={(option) => option.title}\n          options={options}\n          loading={loading}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Search movies...\"\n              variant=\"outlined\"\n              onChange={handleChange}\n              value={input}\n              InputProps={{\n                ...params.InputProps,\n                endAdornment: (\n                  <React.Fragment>\n                    {loading ? (\n                      <CircularProgress color=\"inherit\" size={20} />\n                    ) : null}\n                    {params.InputProps.endAdornment}\n                  </React.Fragment>\n                ),\n              }}\n            />\n          )}\n        />\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onUpdateMovieModal: (movieId) =>\n      dispatch(actions.updateMovieModal(movieId)),\n    onSetSelectedMovie: (movie) => dispatch(actions.setSelectedMovie(movie)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SearchMoviesBar);\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport * as actions from '../../store/actions/index';\nimport SearchMoviesField from '../../containers/Home/SearchMoviesField/SearchMoviesField';\nimport logo from '../../assets/images/logo.png';\nimport Fade from '@material-ui/core/Fade';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: 'black',\n    zIndex: 2,\n  },\n  appBar: {\n    background:\n      'linear-gradient(to bottom, rgba(0,0,0,1) 0%,rgba(0,0,0,0) 100%)',\n    display: 'flex',\n    boxShadow: '0px 0px',\n    height: '15rem',\n    flexDirection: 'row',\n    [theme.breakpoints.down('xs')]: {\n      position: 'absolute',\n    },\n  },\n  Toolbar: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    opacity: 1,\n    width: '100%',\n    height: '50%',\n    boxShadow: '0px 0px',\n    flexWrap: 'wrap',\n    [theme.breakpoints.down('xs')]: {\n      height: '10rem',\n      justifyContent: 'space-between',\n    },\n    [theme.breakpoints.down('sm')]: {\n      height: '7rem',\n      justifyContent: 'space-between',\n    },\n  },\n  signOut: {\n    order: 3,\n    width: '8rem',\n    [theme.breakpoints.down('sm')]: {\n      width: '7rem',\n    },\n    [theme.breakpoints.down('xs')]: {\n      order: 1,\n      width: '7rem',\n    },\n  },\n  logo: {\n    marginTop: '-1rem',\n    order: 1,\n    width: '8rem',\n    [theme.breakpoints.down('sm')]: {\n      width: '7rem',\n    },\n    [theme.breakpoints.down('xs')]: {\n      width: '6rem',\n    },\n  },\n}));\n\nconst ButtonAppBar = (props) => {\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.between('xs', 'sm'));\n\n  const timeout = {\n    enter: 500,\n    exit: 500,\n  };\n\n  return (\n    <div className={classes.root}>\n      <Fade in timeout={timeout}>\n        <AppBar className={classes.appBar}>\n          <Toolbar className={classes.Toolbar}>\n            <img className={classes.logo} src={logo} alt=\"Logo\" />\n            <Link to=\"/logout\" className={classes.signOut}>\n              <Button color=\"secondary\" className={classes.signOut}>\n                <ExitToAppIcon fontSize={matches ? 'small' : undefined} /> Sign\n                out\n              </Button>\n            </Link>\n            {props.selectedMovie ? (\n              <SearchMoviesField className={classes.search} />\n            ) : null}\n          </Toolbar>\n        </AppBar>\n      </Fade>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedMovie: state.movies.selectedMovie,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onLogout: () => dispatch(actions.logout()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonAppBar);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: theme.palette.primary.main,\n    outline: 0,\n  },\n}));\n\nfunction TransitionsModal(props) {\n  const classes = useStyles();\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={props.modal}\n        onClose={props.close}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={props.modal}>\n          <span>{props.children}</span>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n\nexport default TransitionsModal;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport Rating from '@material-ui/lab/Rating';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 400,\n    margin: '.5rem',\n    zIndex: 1000,\n  },\n  media: {\n    width: 350,\n    height: 140,\n    opacity: 0.5,\n  },\n  yourRatings: {\n    zIndex: 1000,\n    color: theme.palette.secondary.main,\n  },\n  cardActions: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    position: 'relative',\n    marginLeft: 0,\n  },\n}));\n\nexport default function MediaCard(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  let borderStyle;\n  props.movie.title === props.title\n    ? (borderStyle = { border: '.1rem solid red' })\n    : (borderStyle = null);\n\n  let style;\n  props.watched\n    ? (style = { backgroundColor: theme.palette.secondary.light })\n    : (style = null);\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea onClick={props.select}>\n        <CardMedia\n          className={classes.media}\n          image={`https://image.tmdb.org/t/p/w500${props.poster}`}\n          title={props.title}\n          movie={props.movie}\n          style={borderStyle}\n        ></CardMedia>\n      </CardActionArea>\n      <CardActions className={classes.cardActions} style={style}>\n        <Rating\n          name=\"rating\"\n          className={classes.yourRatings}\n          value={props.rating}\n          precision={0.5}\n          readOnly\n          max={10}\n          size=\"small\"\n        />\n        <Button size=\"small\" color=\"default\" onClick={props.remove}>\n          Remove Movie\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField } from '@material-ui/core';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    flexGrow: 1,\n    marginTop: '2.5rem',\n  },\n  filter: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n  },\n  gridContainer: {\n    flexGrow: 1,\n    marginTop: '2.5rem',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nconst Filters = (props) => {\n  const classes = useStyles();\n\n  const genreItems = [\n    'Action',\n    'Adventure',\n    'Animation',\n    'Comedy',\n    'Crime',\n    'Documentary',\n    'Drama',\n    'Family',\n    'Fantasy',\n    'History',\n    'Horror',\n    'Music',\n    'Mystery',\n    'Romance',\n    'Science Fiction',\n    'TV Movie',\n    'Thriller',\n    'War',\n    'Western',\n  ];\n\n  let filter = null;\n  if (props.filterSelect === 'title') {\n    filter = (\n      <TextField\n        className={classes.formControl}\n        id=\"title\"\n        label=\"Filter by Title\"\n        value={props.filterTitle}\n        onChange={props.handleTitleChange}\n      />\n    );\n  } else if (props.filterSelect === 'genre') {\n    filter = (\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"genre\">Select Genre</InputLabel>\n        <Select\n          labelId=\"genre\"\n          id=\"genre\"\n          value={props.filterGenre}\n          onChange={props.handleGenreChange}\n        >\n          {genreItems.map((genre) => {\n            return <MenuItem value={genre}>{genre}</MenuItem>;\n          })}\n        </Select>\n      </FormControl>\n    );\n  } else if (props.filterSelect === 'watched') {\n    filter = (\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"watched\"></InputLabel>\n        <Select\n          labelId=\"watched\"\n          id=\"watched\"\n          value={props.filterWatched}\n          onChange={props.handleWatchedChange}\n        >\n          <MenuItem value={'watched'}>Seen</MenuItem>\n          <MenuItem value={'not watched'}>Not Seen</MenuItem>\n        </Select>\n      </FormControl>\n    );\n  } else {\n    filter = null;\n  }\n\n  return (\n    <div className={classes.filter}>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"filter\">Select Filter</InputLabel>\n        <Select\n          labelId=\"filter\"\n          id=\"filter\"\n          value={props.filterSelect}\n          onChange={props.handleSelectChange}\n        >\n          <MenuItem value={'none'} name=\"none\">\n            None\n          </MenuItem>\n          <MenuItem value={'title'} name=\"Title\">\n            Title\n          </MenuItem>\n          <MenuItem value={'genre'} name=\"Genre\">\n            Genre\n          </MenuItem>\n          <MenuItem value={'watched'} name=\"Genre\">\n            Watched\n          </MenuItem>\n        </Select>\n      </FormControl>\n      {filter}\n    </div>\n  );\n};\n\nexport default Filters;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport * as actions from '../../../store/actions/index';\nimport { connect } from 'react-redux';\nimport MovieCard from '../../../components/MovieCard';\nimport Box from '@material-ui/core/Box';\nimport Filters from '../../../components/Filters';\nimport Grow from '@material-ui/core/Grow';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    flexGrow: 1,\n    marginTop: '-5rem',\n  },\n  filter: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n  },\n  gridContainer: {\n    flexGrow: 1,\n    marginTop: '1rem',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nconst MovieGrid = (props) => {\n  const [filterTitle, setFilterTitle] = useState('');\n  const [filterGenre, setFilterGenre] = useState('');\n  const [filterWatched, setFilterWatched] = useState('');\n\n  const { movies, onRemoveFromMovieList, onSetSelectedMovie, token } = props;\n  const classes = useStyles();\n\n  const removeMovie = async (id) => {\n    onRemoveFromMovieList(id, token);\n  };\n\n  const selectMovie = (movie) => {\n    onSetSelectedMovie(movie);\n  };\n\n  const handleTitleChange = (e) => {\n    setFilterTitle(e.target.value);\n  };\n\n  const handleGenreChange = (e) => {\n    setFilterGenre(e.target.value);\n  };\n\n  const handleWatchedChange = (e) => {\n    setFilterWatched(e.target.value);\n  };\n\n  let movieList;\n  if (movies) {\n    let filteredMovies = [...movies];\n\n    if (props.filterSelect === 'title') {\n      filteredMovies = filteredMovies.filter((movie) => {\n        return movie.title.toLowerCase().includes(filterTitle.toLowerCase());\n      });\n    } else if (props.filterSelect === 'genre') {\n      if (filterGenre) {\n        filteredMovies = movies.filter((movie) => {\n          return movie.genres.some((genre) => {\n            return genre.name === filterGenre;\n          });\n        });\n      }\n    } else if (props.filterSelect === 'watched') {\n      if (filterWatched) {\n        if (filterWatched === 'watched') {\n          filteredMovies = movies.filter((movie) => movie.watched === true);\n        } else {\n          filteredMovies = movies.filter((movie) => movie.watched === false);\n        }\n      }\n    }\n\n    movieList = filteredMovies.map((value) => (\n      <Grow in key={value.key}>\n        <Grid key={value.key} item>\n          <MovieCard\n            item\n            title={value.title}\n            overview={value.overview}\n            rating={value.rating}\n            poster={value.poster_path}\n            remove={() => removeMovie(value.key)}\n            select={() => selectMovie(value)}\n            key={value.key}\n            movie={props.selectedMovie}\n            watched={value.watched}\n          ></MovieCard>\n        </Grid>\n      </Grow>\n    ));\n  } else {\n    movieList = null;\n  }\n\n  return (\n    <Box component=\"div\" className={classes.root}>\n      {movies.length !== 0 ? (\n        <Filters\n          filterTitle={filterTitle}\n          handleTitleChange={handleTitleChange}\n          filterGenre={filterGenre}\n          handleGenreChange={handleGenreChange}\n          filterSelect={props.filterSelect}\n          handleSelectChange={props.handleSelect}\n          handleWatchedChange={handleWatchedChange}\n          filterWatched={filterWatched}\n        />\n      ) : null}\n      <Grid\n        container\n        className={classes.gridContainer}\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        {movieList}\n      </Grid>\n    </Box>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    movies: state.movies.movies,\n    token: state.auth.token,\n    userId: state.auth.userId,\n    selectedMovie: state.movies.selectedMovie,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onRemoveFromMovieList: (id, token) =>\n      dispatch(actions.removeFromMovieList(id, token)),\n    onSetSelectedMovie: (movie) => dispatch(actions.setSelectedMovie(movie)),\n    onSetMovieList: (movies) => dispatch(actions.setMovieList(movies)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieGrid);\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions/index';\nimport { Typography } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Rating from '@material-ui/lab/Rating';\nimport { Button } from '@material-ui/core';\nimport SearchMovieField from '../SearchMoviesField/SearchMoviesField';\nimport Fade from '@material-ui/core/Fade';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    height: '57rem',\n    overflow: 'hidden',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n  },\n  black: {\n    width: '100%',\n    height: '57rem',\n    overflow: 'hidden',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'relative',\n    backgroundColor: 'black',\n  },\n  img: {\n    position: 'absolute',\n    opacity: 0.2,\n    width: '150rem',\n    [theme.breakpoints.up('xl')]: {\n      width: '180rem',\n    },\n    [theme.breakpoints.down('l')]: {\n      width: '180rem',\n    },\n    [theme.breakpoints.down('md')]: {\n      width: '120rem',\n    },\n    [theme.breakpoints.down('sm')]: {\n      width: '100rem',\n    },\n    [theme.breakpoints.down('xs')]: {\n      width: '90rem',\n    },\n  },\n  infoContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    width: '45rem',\n    zIndex: 100,\n    [theme.breakpoints.between('xs', 'sm')]: {\n      width: '20rem',\n    },\n    zIndex: 1,\n  },\n  ratingsContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: '1rem',\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column',\n    },\n  },\n  yourRatings: {\n    zIndex: 1000,\n    color: theme.palette.secondary.main,\n    margin: theme.spacing(1),\n  },\n  audienceStars: {\n    margin: theme.spacing(1),\n  },\n  startContainer: {\n    display: 'flex',\n    flexDirection: 'column-reverse',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  ratingText: {\n    margin: '0 0 0 8px',\n  },\n  title: {\n    textAlign: 'center',\n  },\n}));\n\nfunction SelectedMovie(props) {\n  const [fade, setFade] = useState(true);\n  const [movie, setMovie] = useState();\n\n  const classes = useStyles();\n  const {\n    selectedMovie,\n    onUpdateStarRating,\n    onUpdateWatched,\n    movieChanged,\n  } = props;\n\n  const handleRating = async (e, rating) => {\n    const duplicateSelectedMovie = { ...selectedMovie };\n    duplicateSelectedMovie.rating = rating;\n    onUpdateStarRating(\n      selectedMovie.key,\n      props.token,\n      duplicateSelectedMovie,\n      rating\n    );\n  };\n\n  const setMovieWatched = async () => {\n    const duplicateSelectedMovie = { ...selectedMovie };\n    duplicateSelectedMovie.watched = !duplicateSelectedMovie.watched;\n    onUpdateWatched(selectedMovie.key, duplicateSelectedMovie, props.token);\n  };\n\n  let background = null;\n\n  background = (\n    <React.Fragment>\n      <img\n        src=\"https://images.unsplash.com/photo-1489599849927-2ee91cede3ba?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\"\n        className={classes.img}\n        alt=\"backgro\n        undImage\"\n      />\n      <Box component=\"div\" className={classes.startContainer}>\n        <Typography\n          variant=\"h1\"\n          component=\"h2\"\n          color=\"secondary\"\n          gutterBottom={true}\n        >\n          Start building your Movie List!\n        </Typography>\n        <SearchMovieField className={classes.search} />\n      </Box>\n    </React.Fragment>\n  );\n\n  let timeout = {\n    enter: 700,\n    exit: 700,\n  };\n\n  useEffect(() => {\n    if (movieChanged === 'first load') {\n      setMovie(selectedMovie);\n    } else if (movieChanged) {\n      setFade(false);\n      setTimeout(() => {\n        setMovie(selectedMovie);\n        setFade(true);\n      }, 500);\n    }\n  }, [selectedMovie, movieChanged]);\n\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.down('xs'));\n\n  if (movie) {\n    const backgroundImageUrl = `https://image.tmdb.org/t/p/original${movie.backdrop_path}`;\n    background = (\n      <React.Fragment>\n        <Box component=\"div\" className={classes.infoContainer}>\n          <Typography\n            variant=\"h1\"\n            component=\"h2\"\n            color=\"secondary\"\n            className={classes.title}\n          >\n            {movie.title}\n          </Typography>\n\n          <Typography variant=\"h4\" color=\"textPrimary\" gutterBottom={true}>\n            {movie.tagline}\n          </Typography>\n\n          <Typography\n            variant=\"subtitle1\"\n            color=\"textPrimary\"\n            gutterBottom={true}\n          >\n            {movie.overview}\n          </Typography>\n\n          {movie.watched ? (\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              onClick={setMovieWatched}\n            >\n              seen\n            </Button>\n          ) : (\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={setMovieWatched}\n            >\n              not seen\n            </Button>\n          )}\n          <div className={classes.ratingsContainer}>\n            <Box component=\"div\" className={classes.ratingContainer}>\n              <Typography\n                variant=\"h5\"\n                color=\"textSecondary\"\n                className={classes.ratingText}\n              >\n                AUDIENCE RATING:\n              </Typography>\n              <Rating\n                className={classes.audienceStars}\n                name=\"rating\"\n                value={movie.vote_average}\n                precision={0.5}\n                onChange={handleRating}\n                max={10}\n                readOnly\n                size={matches ? 'xsall' : 'medium'}\n              />\n            </Box>\n            <Box component=\"div\" className={classes.ratingContainer}>\n              <Typography\n                variant=\"h5\"\n                color=\"textSecondary\"\n                className={classes.ratingText}\n              >\n                YOUR RATING:{' '}\n              </Typography>\n              <Rating\n                name=\"rating\"\n                className={classes.yourRatings}\n                value={movie.rating}\n                precision={0.5}\n                onChange={handleRating}\n                disabled={!movie.watched}\n                max={10}\n                size={matches ? 'xsall' : 'medium'}\n              />\n            </Box>\n          </div>\n        </Box>\n        <img\n          src={backgroundImageUrl}\n          className={classes.img}\n          alt=\"backgroundImage\"\n        />\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <Box className={classes.black}>\n      <Fade in={fade} timeout={timeout}>\n        <Box className={classes.root}>{background}</Box>\n      </Fade>\n    </Box>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedMovie: state.movies.selectedMovie,\n    token: state.auth.token,\n    movieChanged: state.movies.movieChanged,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onUpdateStarRating: (key, token, movie, rating) =>\n      dispatch(actions.updateStarRating(key, token, movie, rating)),\n    onUpdateWatched: (key, movie, token) =>\n      dispatch(actions.updateWatched(key, movie, token)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectedMovie);\n","import React from 'react';\n\nimport Modal from '../components/UI/TransitionModal';\nimport useHttpErrorHandler from '../hooks/http-error-handler';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  return (props) => {\n    const [error, clearError] = useHttpErrorHandler(axios);\n\n    return (\n      <React.Fragment>\n        <Modal modal={error} onClose={clearError}>\n          {error ? error.message : null}\n        </Modal>\n        <WrappedComponent {...props} />\n      </React.Fragment>\n    );\n  };\n};\n\nexport default withErrorHandler;\n","import { useState, useEffect } from 'react';\n\nexport default (httpClient) => {\n  const [error, setError] = useState(false);\n\n  const reqInterceptor = httpClient.interceptors.request.use((req) => {\n    setError(false);\n    return req;\n  });\n  const resInterceptor = httpClient.interceptors.response.use(\n    (res) => res,\n    (err) => {\n      setError(err);\n    }\n  );\n\n  useEffect(() => {\n    return () => {\n      httpClient.interceptors.request.eject(reqInterceptor);\n      httpClient.interceptors.response.eject(resInterceptor);\n    };\n  }, [\n    reqInterceptor,\n    resInterceptor,\n    httpClient.interceptors.request,\n    httpClient.interceptors.response,\n  ]);\n\n  const errorConfirmedHandler = () => {\n    setError(false);\n  };\n\n  return [error, errorConfirmedHandler];\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Rating from '@material-ui/lab/Rating';\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    width: '70rem',\n    height: '40rem',\n    [theme.breakpoints.between('sm', 'md')]: {\n      height: '37rem',\n      width: '45rem',\n    },\n    [theme.breakpoints.down('xs')]: {\n      height: '37rem',\n      width: '20rem',\n    },\n  },\n  details: {\n    display: 'flex',\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    flex: '5',\n  },\n  cover: {\n    flex: '1 0 40%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    [theme.breakpoints.down('xs')]: {\n      flex: '1 0 20%',\n    },\n  },\n  tagline: {\n    flex: '3 3 90%',\n  },\n  ratingsContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  bottomContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap',\n  },\n  button: {\n    marginTop: '1rem',\n  },\n}));\n\nconst PosterModalCard = (props) => {\n  const classes = useStyles();\n  const { moviePoster, genres, checkMovieAdded } = props;\n\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.down('xs'));\n\n  let posterText;\n  if (!moviePoster) {\n    posterText = (\n      <Typography variant=\"h5\" color=\"textSecondary\" gutterBottom={true}>\n        No poster available\n      </Typography>\n    );\n  }\n\n  const genresList = genres.map((e) => {\n    return e.name + ' ';\n  });\n\n  return (\n    <Card className={classes.root}>\n      <div className={classes.details}>\n        <CardContent className={classes.content}>\n          <div className={classes.tagline}>\n            <Typography\n              // component=\"h3\"\n              variant={matches ? 'h4' : 'h3'}\n              gutterBottom={true}\n              color=\"secondary\"\n            >\n              {props.title}\n            </Typography>\n            <Typography\n              variant={matches ? 'h5' : 'h4'}\n              color=\"textPrimary\"\n              gutterBottom={true}\n            >\n              {props.tagline}\n            </Typography>\n\n            <Typography\n              variant={matches ? 'subtitle2' : 'subtitle1'}\n              color=\"textPrimary\"\n              gutterBottom={true}\n            >\n              {props.overview}\n            </Typography>\n\n            <Typography variant=\"h5\" color=\"textSecondary\" gutterBottom={true}>\n              {genresList}\n            </Typography>\n            <Typography\n              variant=\"h5\"\n              color=\"textSecondary\"\n              gutterBottom={true}\n              display=\"inline\"\n            >\n              Runtime:\n            </Typography>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n              gutterBottom={true}\n              display=\"inline\"\n            >\n              &nbsp;&nbsp;{props.runTime} mins\n            </Typography>\n          </div>\n\n          <div className={classes.bottomContainer}>\n            <div className={classes.ratingsContainer}>\n              <Typography variant={matches ? 'h5' : 'h4'} color=\"textSecondary\">\n                Rating:\n              </Typography>\n              <Rating\n                className={classes.audienceStars}\n                name=\"rating\"\n                value={props.voteAverage}\n                precision={1}\n                max={10}\n                readOnly\n                size={matches ? 'xsall' : 'medium'}\n              />\n            </div>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={props.addMovie}\n              disabled={checkMovieAdded}\n              size=\"xsall\"\n              className={classes.button}\n            >\n              add to list\n            </Button>\n          </div>\n        </CardContent>\n      </div>\n      <CardMedia\n        className={classes.cover}\n        image={moviePoster}\n        src=\"No poster available\"\n      >\n        {posterText}\n      </CardMedia>\n    </Card>\n  );\n};\n\nexport default PosterModalCard;\n","import React, { useEffect, useState } from 'react';\nimport NavBar from '../../components/UI/NavBar';\nimport TransitionModal from '../../components/UI/TransitionModal';\nimport MovieList from './MovieList/MoveList';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SelectedMovie from './SelectedMovie/SelectedMovie';\nimport * as actions from '../../store/actions/index';\nimport axios from '../../axios-movie-data';\nimport { connect } from 'react-redux';\nimport withErrorHandler from '../../hoc/withErrorHandler';\nimport PosterModalCard from '../../components/PosterModalCard';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    positon: 'relative',\n  },\n  gradient: {\n    width: '100%',\n    height: '35rem',\n    position: 'absolute',\n    top: '39rem',\n    background:\n      'linear-gradient(0deg, rgba(2,0,36,0) 0%, rgba(0,0,0,1) 46%, rgba(0,212,255,0) 100%)',\n    // [theme.breakpoints.up('xl')]: {\n    //   top: '44rem',\n    // },\n  },\n  [theme.breakpoints.up('xl')]: {\n    height: '62rem',\n  },\n}));\n\nfunction Home(props) {\n  const [loading, setLoading] = useState(true);\n  const [selectInput, setSelectInput] = useState('');\n  const classes = useStyles();\n  const {\n    onSetMovieList,\n    token,\n    userId,\n    onModalToggle,\n    onAddToMovieList,\n    searchedMovie,\n    movies,\n    modal,\n  } = props;\n\n  const handleClose = () => {\n    onModalToggle();\n  };\n\n  const handleAdd = async () => {\n    let movie = { ...searchedMovie };\n    movie.userId = userId;\n    onAddToMovieList(movie, token);\n    setSelectInput(null);\n  };\n\n  const handleSelectChange = (e) => {\n    setSelectInput(e.target.value);\n  };\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const queryParams =\n          '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\n        const response = await axios.get('/movies.json' + queryParams);\n\n        const arrayResponse = Object.entries(response.data).map((e) => {\n          e[1].key = e[0];\n          return e[1];\n        });\n\n        onSetMovieList(arrayResponse);\n        setLoading(false);\n      } catch (err) {}\n    })();\n  }, [onSetMovieList, token, userId]);\n\n  let moviePoster = null;\n\n  if (searchedMovie) {\n    if (searchedMovie.poster_path) {\n      moviePoster = `https://image.tmdb.org/t/p/w500${searchedMovie.poster_path}`;\n    }\n  }\n\n  let homepage = null;\n\n  let checkMovieAdded = false;\n  if (movies && searchedMovie) {\n    checkMovieAdded = movies.some((e) => e.id === searchedMovie.id);\n  }\n\n  if (!loading) {\n    homepage = (\n      <div className={classes.root}>\n        <NavBar />\n        <SelectedMovie />\n        <div className={classes.gradient}></div>\n        <MovieList\n          handleSelect={(e) => handleSelectChange(e)}\n          filterSelect={selectInput}\n        />\n        {searchedMovie ? (\n          <TransitionModal modal={modal} close={handleClose}>\n            <PosterModalCard\n              addMovie={handleAdd}\n              moviePoster={moviePoster}\n              runTime={searchedMovie.runtime}\n              genres={searchedMovie.genres}\n              checkMovieAdded={checkMovieAdded}\n              title={searchedMovie.title}\n              tagline={searchedMovie.tagline}\n              overview={searchedMovie.overview}\n              voteAverage={searchedMovie.vote_average}\n            />\n          </TransitionModal>\n        ) : null}\n      </div>\n    );\n  }\n\n  return <React.Fragment>{homepage}</React.Fragment>;\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    movies: state.movies.movies,\n    token: state.auth.token,\n    userId: state.auth.userId,\n    modal: state.movies.modal,\n    searchedMovie: state.movies.searchedMovie,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onRemoveFromMovieList: (id, token) =>\n      dispatch(actions.removeFromMovieList(id, token)),\n    onSetSelectedMovie: (movie) => dispatch(actions.setSelectedMovie(movie)),\n    onSetMovieList: (movies) => dispatch(actions.setMovieList(movies)),\n    onModalToggle: () => dispatch(actions.modalToggle()),\n    onAddToMovieList: (movie, token) =>\n      dispatch(actions.addToMovieList(movie, token)),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(Home, axios));\n"],"sourceRoot":""}