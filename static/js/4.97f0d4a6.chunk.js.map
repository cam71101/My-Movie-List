{"version":3,"sources":["containers/Home/SearchMoviesField/SearchMoviesField.js","components/UI/NavBar.js","components/UI/TransitionModal.js","components/MovieCard.js","components/Filters.js","containers/Home/MovieList/MoveList.js","containers/Home/SelectedMovie/SelectedMovie.js","hoc/withErrorHandler.js","hooks/http-error-handler.js","components/PosterModalCard.js","containers/Home/Home.js"],"names":["useStyles","makeStyles","theme","search","position","borderRadius","shape","width","order","breakpoints","down","margin","searchIcon","padding","spacing","height","right","pointerEvents","display","alignItems","justifyContent","color","palette","common","white","autoComplete","inputRoot","inputInput","paddingLeft","transition","transitions","create","up","connect","dispatch","onUpdateMovieModal","movieId","actions","onSetSelectedMovie","movie","props","useState","open","setOpen","options","setOptions","input","setInput","classes","loading","length","useEffect","active","a","fetch","response","json","movies","results","map","key","alert","handleSubmit","e","value","preventDefault","id","handleChange","target","className","onSubmit","Autocomplete","onOpen","onClose","popupIcon","autoHighlight","onChange","getOptionSelected","option","name","getOptionLabel","title","renderInput","params","TextField","label","variant","InputProps","endAdornment","Fragment","CircularProgress","size","root","flexGrow","backgroundColor","appBar","background","boxShadow","Toolbar","opacity","flexWrap","signOut","marginRight","logo","marginTop","state","selectedMovie","onLogout","useTheme","matches","useMediaQuery","between","Fade","in","timeout","enter","exit","AppBar","src","alt","to","Button","fontSize","SearchMoviesField","modal","primary","main","outline","TransitionsModal","Modal","aria-labelledby","aria-describedby","close","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","children","maxWidth","zIndex","media","yourRatings","secondary","cardActions","marginLeft","MediaCard","borderStyle","style","border","watched","light","Card","CardActionArea","onClick","select","CardMedia","image","poster","CardActions","Rating","rating","precision","readOnly","max","remove","flexDirection","filter","gridContainer","formControl","minWidth","Filters","filterSelect","filterTitle","handleTitleChange","FormControl","InputLabel","Select","labelId","filterGenre","handleGenreChange","genre","MenuItem","filterWatched","handleWatchedChange","handleSelectChange","token","auth","userId","onRemoveFromMovieList","onSetMovieList","movieList","setFilterTitle","setFilterGenre","setFilterWatched","removeMovie","filteredMovies","toLowerCase","includes","genres","some","Grow","Grid","item","overview","poster_path","Box","component","handleSelect","container","direction","justify","overflow","paper","black","img","infoContainer","ratingsContainer","audienceStars","startContainer","movieChanged","onUpdateStarRating","onUpdateWatched","fade","setFade","setMovie","handleRating","duplicateSelectedMovie","setMovieWatched","Typography","gutterBottom","setTimeout","backgroundImageUrl","backdrop_path","tagline","ratingContainer","vote_average","disabled","withErrorHandler","WrappedComponent","axios","httpClient","error","setError","reqInterceptor","interceptors","request","use","req","resInterceptor","res","err","eject","useHttpErrorHandler","clearError","message","details","content","flex","cover","bottomContainer","button","PosterModalCard","posterText","moviePoster","checkMovieAdded","genresList","CardContent","runTime","voteAverage","addMovie","positon","gradient","top","searchedMovie","onModalToggle","onAddToMovieList","setLoading","selectInput","setSelectInput","handleAdd","queryParams","get","arrayResponse","Object","entries","data","homepage","NavBar","TransitionModal","runtime"],"mappings":"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","file":"static/js/4.97f0d4a6.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport fetch from 'cross-fetch';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions/index';\n\nconst useStyles = makeStyles((theme) => ({\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    // backgroundColor: fade(theme.palette.common.white, 0.1),\n    // '&:hover': {\n    //   backgroundColor: fade(theme.palette.common.white, 0.25),\n    // },\n    // marginLeft: 0,\n    width: '20rem',\n    order: 2,\n    [theme.breakpoints.down('xs')]: {\n      order: 3,\n      width: '23rem',\n      margin: 'auto',\n    },\n    [theme.breakpoints.down('sm')]: {\n      margin: 'auto',\n    },\n    alignSelf: 'center',\n    // justifySelf: 'center',\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    right: 20,\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    color: theme.palette.common.white,\n    [theme.breakpoints.down('xs')]: {\n      right: 50,\n    },\n  },\n  autoComplete: {\n    width: '20rem',\n    [theme.breakpoints.down('xs')]: {\n      margin: 'auto',\n    },\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\n\nconst SearchMoviesBar = (props) => {\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [input, setInput] = useState();\n  const classes = useStyles();\n  const { onUpdateMovieModal } = props;\n  const loading = open && options.length === 0;\n\n  useEffect(() => {\n    let active = true;\n    if (!input) {\n      return undefined;\n    }\n\n    (async () => {\n      try {\n        const response = await fetch(\n          `http://api.themoviedb.org/3/search/movie?api_key=105094d957931ab7b01705c2f3d2dd58&query=${input}`\n        );\n        const movies = await response.json();\n        movies.results.length = 2;\n        if (active) {\n          setOptions(movies.results.map((key) => key));\n        }\n      } catch (err) {\n        alert(err);\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading, input]);\n\n  useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  const handleSubmit = (e, value) => {\n    e.preventDefault();\n    if (value) {\n      onUpdateMovieModal(value.id);\n    }\n  };\n\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  return (\n    <div className={classes.search}>\n      <div className={classes.searchIcon}>\n        <SearchIcon />\n      </div>\n      <form onSubmit={handleSubmit}>\n        <Autocomplete\n          className={classes.autoComplete}\n          id=\"search movies\"\n          open={open}\n          onOpen={() => {\n            setOpen(true);\n          }}\n          onClose={() => {\n            setOpen(false);\n          }}\n          popupIcon={false}\n          autoHighlight={true}\n          onChange={handleSubmit}\n          getOptionSelected={(option, value) => {\n            return option.name === value.name;\n          }}\n          getOptionLabel={(option) => option.title}\n          options={options}\n          loading={loading}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Search movies...\"\n              variant=\"outlined\"\n              onChange={handleChange}\n              value={input}\n              InputProps={{\n                ...params.InputProps,\n                endAdornment: (\n                  <React.Fragment>\n                    {loading ? (\n                      <CircularProgress color=\"inherit\" size={20} />\n                    ) : null}\n                    {params.InputProps.endAdornment}\n                  </React.Fragment>\n                ),\n              }}\n            />\n          )}\n        />\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onUpdateMovieModal: (movieId) =>\n      dispatch(actions.updateMovieModal(movieId)),\n    onSetSelectedMovie: (movie) => dispatch(actions.setSelectedMovie(movie)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SearchMoviesBar);\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport * as actions from '../../store/actions/index';\nimport SearchMoviesField from '../../containers/Home/SearchMoviesField/SearchMoviesField';\nimport logo from '../../assets/images/logo.png';\nimport Fade from '@material-ui/core/Fade';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: 'black',\n  },\n  appBar: {\n    background:\n      'linear-gradient(to bottom, rgba(0,0,0,1) 0%,rgba(0,0,0,0) 100%)',\n    display: 'flex',\n    // justifyContent: 'center',\n    // position: 'fixed',\n    boxShadow: '0px 0px',\n    height: '10rem',\n  },\n  Toolbar: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    opacity: 1,\n    width: '100%',\n    background:\n      'linear-gradient(to bottom, rgba(0,0,0,1) 0%,rgba(0,0,0,0) 100%)',\n    flexWrap: 'wrap',\n    [theme.breakpoints.down('xs')]: {\n      height: '10rem',\n      justifyContent: 'space-between',\n    },\n    [theme.breakpoints.down('sm')]: {\n      height: '7rem',\n      justifyContent: 'space-between',\n    },\n  },\n  signOut: {\n    order: 3,\n    width: '8rem',\n    marginRight: '3rem',\n    [theme.breakpoints.down('xs')]: {\n      order: 1,\n    },\n  },\n  logo: {\n    marginTop: '-1rem',\n    order: 1,\n    width: '8rem',\n    [theme.breakpoints.down('md')]: {\n      width: '8rem',\n    },\n    [theme.breakpoints.down('sm')]: {\n      width: '7rem',\n    },\n    [theme.breakpoints.down('xs')]: {\n      width: '6rem',\n    },\n  },\n}));\n\nconst ButtonAppBar = (props) => {\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.between('xs', 'sm'));\n\n  const timeout = {\n    enter: 500,\n    exit: 500,\n  };\n\n  return (\n    <div className={classes.root}>\n      <Fade in timeout={timeout}>\n        <AppBar className={classes.appBar}>\n          <Toolbar className={classes.Toolbar}>\n            <img className={classes.logo} src={logo} alt=\"Logo\" />\n            <Link to=\"/logout\" className={classes.signOut}>\n              <Button color=\"secondary\" className={classes.signOut}>\n                <ExitToAppIcon fontSize={matches ? 'small' : 'medium'} /> Sign\n                out\n              </Button>\n            </Link>\n            {props.selectedMovie ? (\n              <SearchMoviesField className={classes.search} />\n            ) : null}\n          </Toolbar>\n        </AppBar>\n      </Fade>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedMovie: state.movies.selectedMovie,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onLogout: () => dispatch(actions.logout()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonAppBar);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: theme.palette.primary.main,\n    outline: 0,\n  },\n}));\n\nfunction TransitionsModal(props) {\n  const classes = useStyles();\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={props.modal}\n        onClose={props.close}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={props.modal}>\n          <span>{props.children}</span>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n\nexport default TransitionsModal;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport Rating from '@material-ui/lab/Rating';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 400,\n    margin: '.5rem',\n    zIndex: 1000,\n  },\n  media: {\n    width: 350,\n    height: 140,\n    opacity: 0.5,\n  },\n  yourRatings: {\n    zIndex: 1000,\n    color: theme.palette.secondary.main,\n  },\n  cardActions: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    position: 'relative',\n    marginLeft: 0,\n  },\n}));\n\nexport default function MediaCard(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  let borderStyle;\n  props.movie.title === props.title\n    ? (borderStyle = { border: '.1rem solid red' })\n    : (borderStyle = null);\n\n  let style;\n  props.watched\n    ? (style = { backgroundColor: theme.palette.secondary.light })\n    : (style = null);\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea onClick={props.select}>\n        <CardMedia\n          className={classes.media}\n          image={`https://image.tmdb.org/t/p/w500${props.poster}`}\n          title={props.title}\n          movie={props.movie}\n          style={borderStyle}\n        ></CardMedia>\n      </CardActionArea>\n      <CardActions className={classes.cardActions} style={style}>\n        <Rating\n          name=\"rating\"\n          className={classes.yourRatings}\n          value={props.rating}\n          precision={0.5}\n          readOnly\n          max={10}\n          size=\"small\"\n        />\n        <Button size=\"small\" color=\"default\" onClick={props.remove}>\n          Remove Movie\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField } from '@material-ui/core';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    flexGrow: 1,\n    marginTop: '2.5rem',\n  },\n  filter: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n  },\n  gridContainer: {\n    flexGrow: 1,\n    marginTop: '2.5rem',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nconst Filters = (props) => {\n  const classes = useStyles();\n\n  const genreItems = [\n    'Action',\n    'Adventure',\n    'Animation',\n    'Comedy',\n    'Crime',\n    'Documentary',\n    'Drama',\n    'Family',\n    'Fantasy',\n    'History',\n    'Horror',\n    'Music',\n    'Mystery',\n    'Romance',\n    'Science Fiction',\n    'TV Movie',\n    'Thriller',\n    'War',\n    'Western',\n  ];\n\n  let filter = null;\n  if (props.filterSelect === 'title') {\n    filter = (\n      <TextField\n        className={classes.formControl}\n        id=\"title\"\n        label=\"Filter by Title\"\n        value={props.filterTitle}\n        onChange={props.handleTitleChange}\n      />\n    );\n  } else if (props.filterSelect === 'genre') {\n    filter = (\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"genre\">Select Genre</InputLabel>\n        <Select\n          labelId=\"genre\"\n          id=\"genre\"\n          value={props.filterGenre}\n          onChange={props.handleGenreChange}\n        >\n          {genreItems.map((genre) => {\n            return <MenuItem value={genre}>{genre}</MenuItem>;\n          })}\n        </Select>\n      </FormControl>\n    );\n  } else if (props.filterSelect === 'watched') {\n    filter = (\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"watched\"></InputLabel>\n        <Select\n          labelId=\"watched\"\n          id=\"watched\"\n          value={props.filterWatched}\n          onChange={props.handleWatchedChange}\n        >\n          <MenuItem value={'watched'}>Seen</MenuItem>\n          <MenuItem value={'not watched'}>Not Seen</MenuItem>\n        </Select>\n      </FormControl>\n    );\n  }\n\n  return (\n    <div className={classes.filter}>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"filter\">Select Filter</InputLabel>\n        <Select\n          labelId=\"filter\"\n          id=\"filter\"\n          value={props.filterSelect}\n          onChange={props.handleSelectChange}\n        >\n          <MenuItem value={'title'} name=\"Title\">\n            Title\n          </MenuItem>\n          <MenuItem value={'genre'} name=\"Genre\">\n            Genre\n          </MenuItem>\n          <MenuItem value={'watched'} name=\"Genre\">\n            Watched\n          </MenuItem>\n        </Select>\n      </FormControl>\n      {filter}\n    </div>\n  );\n};\n\nexport default Filters;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport * as actions from '../../../store/actions/index';\nimport { connect } from 'react-redux';\nimport MovieCard from '../../../components/MovieCard';\nimport Box from '@material-ui/core/Box';\nimport Filters from '../../../components/Filters';\nimport Grow from '@material-ui/core/Grow';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    flexGrow: 1,\n    marginTop: '-5rem',\n  },\n  filter: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n  },\n  gridContainer: {\n    flexGrow: 1,\n    marginTop: '1rem',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nconst MovieGrid = (props) => {\n  const [filterTitle, setFilterTitle] = useState('');\n  const [filterGenre, setFilterGenre] = useState('');\n  const [filterWatched, setFilterWatched] = useState('');\n\n  const { movies, onRemoveFromMovieList, onSetSelectedMovie, token } = props;\n  const classes = useStyles();\n\n  const removeMovie = async (id) => {\n    onRemoveFromMovieList(id, token);\n  };\n\n  const selectMovie = (movie) => {\n    onSetSelectedMovie(movie);\n  };\n\n  const handleTitleChange = (e) => {\n    setFilterTitle(e.target.value);\n  };\n\n  const handleGenreChange = (e) => {\n    setFilterGenre(e.target.value);\n  };\n\n  const handleWatchedChange = (e) => {\n    setFilterWatched(e.target.value);\n  };\n\n  let movieList;\n  if (movies) {\n    let filteredMovies = [...movies];\n\n    if (props.filterSelect === 'title') {\n      filteredMovies = filteredMovies.filter((movie) => {\n        return movie.title.toLowerCase().includes(filterTitle.toLowerCase());\n      });\n    } else if (props.filterSelect === 'genre') {\n      if (filterGenre) {\n        filteredMovies = movies.filter((movie) => {\n          return movie.genres.some((genre) => {\n            return genre.name === filterGenre;\n          });\n        });\n      }\n    } else if (props.filterSelect === 'watched') {\n      if (filterWatched === 'watched') {\n        filteredMovies = movies.filter((movie) => movie.watched === true);\n      } else {\n        filteredMovies = movies.filter((movie) => movie.watched === false);\n      }\n    }\n\n    movieList = filteredMovies.map((value) => (\n      <Grow in key={value.key}>\n        <Grid key={value.key} item>\n          <MovieCard\n            item\n            title={value.title}\n            overview={value.overview}\n            rating={value.rating}\n            poster={value.poster_path}\n            remove={() => removeMovie(value.key)}\n            select={() => selectMovie(value)}\n            key={value.key}\n            movie={props.selectedMovie}\n            watched={value.watched}\n          ></MovieCard>\n        </Grid>\n      </Grow>\n    ));\n  } else {\n    movieList = null;\n  }\n\n  return (\n    <Box component=\"div\" className={classes.root}>\n      {movies.length !== 0 ? (\n        <Filters\n          filterTitle={filterTitle}\n          handleTitleChange={handleTitleChange}\n          filterGenre={filterGenre}\n          handleGenreChange={handleGenreChange}\n          filterSelect={props.filterSelect}\n          handleSelectChange={props.handleSelect}\n          handleWatchedChange={handleWatchedChange}\n          filterWatched={filterWatched}\n        />\n      ) : null}\n      <Grid\n        container\n        className={classes.gridContainer}\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        {movieList}\n      </Grid>\n    </Box>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    movies: state.movies.movies,\n    token: state.auth.token,\n    userId: state.auth.userId,\n    selectedMovie: state.movies.selectedMovie,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onRemoveFromMovieList: (id, token) =>\n      dispatch(actions.removeFromMovieList(id, token)),\n    onSetSelectedMovie: (movie) => dispatch(actions.setSelectedMovie(movie)),\n    onSetMovieList: (movies) => dispatch(actions.setMovieList(movies)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieGrid);\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions/index';\nimport { Typography } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Rating from '@material-ui/lab/Rating';\nimport { Button } from '@material-ui/core';\nimport SearchMovieField from '../SearchMoviesField/SearchMoviesField';\nimport Fade from '@material-ui/core/Fade';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    height: '57rem',\n    overflow: 'hidden',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n  },\n  black: {\n    width: '100%',\n    height: '57rem',\n    overflow: 'hidden',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'relative',\n    backgroundColor: 'black',\n  },\n  img: {\n    position: 'absolute',\n    opacity: 0.2,\n    width: '160rem',\n    [theme.breakpoints.between('xs', 'sm')]: {\n      width: '90rem',\n    },\n  },\n  infoContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    width: '45rem',\n    zIndex: 100,\n    [theme.breakpoints.down('xs')]: {\n      width: '20rem',\n    },\n  },\n  ratingsContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: '1rem',\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column',\n    },\n  },\n  yourRatings: {\n    zIndex: 1000,\n    color: theme.palette.secondary.main,\n    margin: theme.spacing(1),\n  },\n  audienceStars: {\n    margin: theme.spacing(1),\n  },\n  startContainer: {\n    display: 'flex',\n    flexDirection: 'column-reverse',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}));\n\nfunction SelectedMovie(props) {\n  const [fade, setFade] = useState(true);\n  const [movie, setMovie] = useState();\n\n  const classes = useStyles();\n  const {\n    selectedMovie,\n    onUpdateStarRating,\n    onUpdateWatched,\n    movieChanged,\n  } = props;\n\n  const handleRating = async (e, rating) => {\n    const duplicateSelectedMovie = { ...selectedMovie };\n    duplicateSelectedMovie.rating = rating;\n    onUpdateStarRating(\n      selectedMovie.key,\n      props.token,\n      duplicateSelectedMovie,\n      rating\n    );\n  };\n\n  const setMovieWatched = async () => {\n    const duplicateSelectedMovie = { ...selectedMovie };\n    duplicateSelectedMovie.watched = !duplicateSelectedMovie.watched;\n    onUpdateWatched(selectedMovie.key, duplicateSelectedMovie, props.token);\n  };\n\n  let background = null;\n\n  background = (\n    <React.Fragment>\n      <img\n        src=\"https://images.unsplash.com/photo-1489599849927-2ee91cede3ba?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\"\n        className={classes.img}\n        alt=\"backgro\n        undImage\"\n      />\n      <Box component=\"div\" className={classes.startContainer}>\n        <Typography\n          variant=\"h1\"\n          component=\"h2\"\n          color=\"secondary\"\n          gutterBottom={true}\n        >\n          Start building your Movie List!\n        </Typography>\n        <SearchMovieField />\n      </Box>\n    </React.Fragment>\n  );\n\n  let timeout = {\n    enter: 700,\n    exit: 700,\n  };\n\n  useEffect(() => {\n    if (movieChanged === 'first load') {\n      setMovie(selectedMovie);\n    } else if (movieChanged) {\n      setFade(false);\n      setTimeout(() => {\n        setMovie(selectedMovie);\n        setFade(true);\n      }, 500);\n    }\n  }, [selectedMovie, movieChanged]);\n\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.down('xs'));\n\n  if (movie) {\n    const backgroundImageUrl = `https://image.tmdb.org/t/p/original${movie.backdrop_path}`;\n    background = (\n      <React.Fragment>\n        <Box component=\"div\" className={classes.infoContainer}>\n          <Typography variant=\"h1\" component=\"h2\" color=\"secondary\">\n            {movie.title}\n          </Typography>\n\n          <Typography variant=\"h4\" color=\"textPrimary\" gutterBottom={true}>\n            {movie.tagline}\n          </Typography>\n\n          <Typography\n            variant=\"subtitle1\"\n            color=\"textPrimary\"\n            gutterBottom={true}\n          >\n            {movie.overview}\n          </Typography>\n\n          {movie.watched ? (\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              onClick={setMovieWatched}\n            >\n              seen\n            </Button>\n          ) : (\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={setMovieWatched}\n            >\n              not seen\n            </Button>\n          )}\n          <div className={classes.ratingsContainer}>\n            <Box component=\"div\" className={classes.ratingContainer}>\n              <Typography variant=\"h5\" color=\"textSecondary\">\n                AUDIENCE RATING:\n              </Typography>\n              <Rating\n                className={classes.audienceStars}\n                name=\"rating\"\n                value={movie.vote_average}\n                precision={0.5}\n                onChange={handleRating}\n                max={10}\n                readOnly\n                size={matches ? 'xsall' : 'medium'}\n              />\n            </Box>\n            <Box component=\"div\" className={classes.ratingContainer}>\n              <Typography variant=\"h5\" color=\"textSecondary\">\n                YOUR RATING:{' '}\n              </Typography>\n              <Rating\n                name=\"rating\"\n                className={classes.yourRatings}\n                value={movie.rating}\n                precision={0.5}\n                onChange={handleRating}\n                disabled={!movie.watched}\n                max={10}\n                size={matches ? 'xsall' : 'medium'}\n              />\n            </Box>\n          </div>\n        </Box>\n        <img\n          src={backgroundImageUrl}\n          className={classes.img}\n          alt=\"backgroundImage\"\n        />\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <Box className={classes.black}>\n      <Fade in={fade} timeout={timeout}>\n        <Box className={classes.root}>{background}</Box>\n      </Fade>\n    </Box>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedMovie: state.movies.selectedMovie,\n    token: state.auth.token,\n    movieChanged: state.movies.movieChanged,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onUpdateStarRating: (key, token, movie, rating) =>\n      dispatch(actions.updateStarRating(key, token, movie, rating)),\n    onUpdateWatched: (key, movie, token) =>\n      dispatch(actions.updateWatched(key, movie, token)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectedMovie);\n","import React from 'react';\n\nimport Modal from '../components/UI/TransitionModal';\nimport useHttpErrorHandler from '../hooks/http-error-handler';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  return (props) => {\n    const [error, clearError] = useHttpErrorHandler(axios);\n\n    return (\n      <React.Fragment>\n        <Modal modal={error} onClose={clearError}>\n          {error ? error.message : null}\n        </Modal>\n        <WrappedComponent {...props} />\n      </React.Fragment>\n    );\n  };\n};\n\nexport default withErrorHandler;\n","import { useState, useEffect } from 'react';\n\nexport default (httpClient) => {\n  const [error, setError] = useState(null);\n\n  const reqInterceptor = httpClient.interceptors.request.use((req) => {\n    setError(null);\n    return req;\n  });\n  const resInterceptor = httpClient.interceptors.response.use(\n    (res) => res,\n    (err) => {\n      setError(err);\n    }\n  );\n\n  useEffect(() => {\n    return () => {\n      httpClient.interceptors.request.eject(reqInterceptor);\n      httpClient.interceptors.response.eject(resInterceptor);\n    };\n  }, [\n    reqInterceptor,\n    resInterceptor,\n    httpClient.interceptors.request,\n    httpClient.interceptors.response,\n  ]);\n\n  const errorConfirmedHandler = () => {\n    setError(null);\n  };\n\n  return [error, errorConfirmedHandler];\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Rating from '@material-ui/lab/Rating';\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    width: '70rem',\n    height: '40rem',\n    [theme.breakpoints.down('sm')]: {\n      height: '37rem',\n      width: '45rem',\n    },\n    [theme.breakpoints.down('xs')]: {\n      height: '37rem',\n      width: '20rem',\n    },\n  },\n  details: {\n    display: 'flex',\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    flex: '5',\n  },\n  cover: {\n    flex: '1 0 40%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    [theme.breakpoints.down('xs')]: {\n      flex: '1 0 20%',\n    },\n  },\n  tagline: {\n    flex: '3 3 90%',\n  },\n  ratingsContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  bottomContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap',\n  },\n  button: {\n    marginTop: '1rem',\n  },\n}));\n\nconst PosterModalCard = (props) => {\n  const classes = useStyles();\n  const { movie, moviePoster, genres, checkMovieAdded } = props;\n\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.down('xs'));\n\n  let posterText;\n  if (!moviePoster) {\n    posterText = (\n      <Typography variant=\"h5\" color=\"textSecondary\" gutterBottom={true}>\n        No poster available\n      </Typography>\n    );\n  }\n\n  const genresList = genres.map((e) => {\n    return e.name + ' ';\n  });\n\n  return (\n    <Card className={classes.root}>\n      <div className={classes.details}>\n        <CardContent className={classes.content}>\n          <div className={classes.tagline}>\n            <Typography\n              // component=\"h3\"\n              variant={matches ? 'h4' : 'h3'}\n              gutterBottom={true}\n              color=\"secondary\"\n            >\n              {props.title}\n            </Typography>\n            <Typography\n              variant={matches ? 'h5' : 'h4'}\n              color=\"textPrimary\"\n              gutterBottom={true}\n            >\n              {props.tagline}\n            </Typography>\n\n            <Typography\n              variant={matches ? 'subtitle2' : 'subtitle1'}\n              color=\"textPrimary\"\n              gutterBottom={true}\n            >\n              {props.overview}\n            </Typography>\n\n            <Typography variant=\"h5\" color=\"textSecondary\" gutterBottom={true}>\n              {genresList}\n            </Typography>\n            <Typography\n              variant=\"h5\"\n              color=\"textSecondary\"\n              gutterBottom={true}\n              display=\"inline\"\n            >\n              Runtime:\n            </Typography>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n              gutterBottom={true}\n              display=\"inline\"\n            >\n              &nbsp;&nbsp;{props.runTime} mins\n            </Typography>\n          </div>\n\n          <div className={classes.bottomContainer}>\n            <div className={classes.ratingsContainer}>\n              <Typography variant={matches ? 'h5' : 'h4'} color=\"textSecondary\">\n                Rating:\n              </Typography>\n              <Rating\n                className={classes.audienceStars}\n                name=\"rating\"\n                value={props.voteAverage}\n                precision={1}\n                max={10}\n                readOnly\n                size={matches ? 'xsall' : 'medium'}\n              />\n            </div>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={props.addMovie}\n              disabled={checkMovieAdded}\n              size=\"xsall\"\n              className={classes.button}\n            >\n              add to list\n            </Button>\n          </div>\n        </CardContent>\n      </div>\n      <CardMedia\n        className={classes.cover}\n        image={moviePoster}\n        src=\"No poster available\"\n      >\n        {posterText}\n      </CardMedia>\n    </Card>\n  );\n};\n\nexport default PosterModalCard;\n","import React, { useEffect, useState } from 'react';\nimport NavBar from '../../components/UI/NavBar';\nimport TransitionModal from '../../components/UI/TransitionModal';\nimport MovieList from './MovieList/MoveList';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SelectedMovie from './SelectedMovie/SelectedMovie';\nimport * as actions from '../../store/actions/index';\nimport axios from '../../axios-movie-data';\nimport { connect } from 'react-redux';\nimport withErrorHandler from '../../hoc/withErrorHandler';\nimport PosterModalCard from '../../components/PosterModalCard';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    positon: 'relative',\n  },\n  gradient: {\n    width: '100%',\n    height: '30rem',\n    position: 'absolute',\n    top: '39rem',\n    background:\n      'linear-gradient(0deg, rgba(2,0,36,0) 0%, rgba(0,0,0,1) 46%, rgba(0,212,255,0) 100%)',\n  },\n});\n\nfunction Home(props) {\n  const [loading, setLoading] = useState(true);\n  const [selectInput, setSelectInput] = useState('');\n  const classes = useStyles();\n  const {\n    onSetMovieList,\n    token,\n    userId,\n    onModalToggle,\n    onAddToMovieList,\n    searchedMovie,\n    movies,\n  } = props;\n\n  const handleClose = () => {\n    onModalToggle();\n  };\n\n  const handleAdd = async () => {\n    let movie = { ...searchedMovie };\n    movie.userId = userId;\n    onAddToMovieList(movie, token);\n    setSelectInput(null);\n  };\n\n  const handleSelectChange = (e) => {\n    setSelectInput(e.target.value);\n  };\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const queryParams =\n          '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\n        const response = await axios.get('/movies.json' + queryParams);\n\n        const arrayResponse = Object.entries(response.data).map((e) => {\n          e[1].key = e[0];\n          return e[1];\n        });\n\n        onSetMovieList(arrayResponse);\n        setLoading(false);\n      } catch (err) {}\n    })();\n  }, [onSetMovieList, token, userId]);\n\n  let moviePoster = null;\n\n  if (searchedMovie) {\n    if (searchedMovie.poster_path) {\n      moviePoster = `https://image.tmdb.org/t/p/w500${searchedMovie.poster_path}`;\n    }\n  }\n\n  let homepage = null;\n\n  let checkMovieAdded = false;\n  if (movies && searchedMovie) {\n    checkMovieAdded = movies.some((e) => e.id === searchedMovie.id);\n  }\n\n  if (!loading) {\n    homepage = (\n      <div className={classes.root}>\n        <NavBar />\n        <SelectedMovie />\n        <div className={classes.gradient}></div>\n        <MovieList\n          handleSelect={(e) => handleSelectChange(e)}\n          filterSelect={selectInput}\n        />\n        {searchedMovie ? (\n          <TransitionModal modal={props.modal} close={handleClose}>\n            <PosterModalCard\n              addMovie={handleAdd}\n              moviePoster={moviePoster}\n              runTime={searchedMovie.runtime}\n              genres={searchedMovie.genres}\n              checkMovieAdded={checkMovieAdded}\n              title={searchedMovie.title}\n              tagline={searchedMovie.tagline}\n              overview={searchedMovie.overview}\n              voteAverage={searchedMovie.vote_average}\n            />\n          </TransitionModal>\n        ) : null}\n      </div>\n    );\n  }\n\n  return <React.Fragment>{homepage}</React.Fragment>;\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    movies: state.movies.movies,\n    token: state.auth.token,\n    userId: state.auth.userId,\n    modal: state.movies.modal,\n    searchedMovie: state.movies.searchedMovie,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onRemoveFromMovieList: (id, token) =>\n      dispatch(actions.removeFromMovieList(id, token)),\n    onSetSelectedMovie: (movie) => dispatch(actions.setSelectedMovie(movie)),\n    onSetMovieList: (movies) => dispatch(actions.setMovieList(movies)),\n    onModalToggle: () => dispatch(actions.modalToggle()),\n    onAddToMovieList: (movie, token) =>\n      dispatch(actions.addToMovieList(movie, token)),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(Home, axios));\n"],"sourceRoot":""}